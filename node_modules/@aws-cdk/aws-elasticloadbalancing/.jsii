{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-codedeploy-api": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                },
                "python": {
                  "distName": "aws-cdk.cx-api",
                  "module": "aws_cdk.cx_api"
                }
              },
              "version": "0.28.0"
            }
          },
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            },
            "python": {
              "distName": "aws-cdk.cdk",
              "module": "aws_cdk.cdk"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CodeDeploy.Api",
          "packageId": "Amazon.CDK.AWS.CodeDeploy.Api",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "codedeploy-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codedeploy.api"
        },
        "js": {
          "npm": "@aws-cdk/aws-codedeploy-api"
        },
        "python": {
          "distName": "aws-cdk.aws-codedeploy-api",
          "module": "aws_cdk.aws_codedeploy_api"
        }
      },
      "version": "0.28.0"
    },
    "@aws-cdk/aws-ec2": {
      "dependencies": {
        "@aws-cdk/aws-cloudwatch": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "peer": true,
                      "targets": {
                        "dotnet": {
                          "assemblyOriginatorKeyFile": "../../key.snk",
                          "namespace": "Amazon.CDK.CXAPI",
                          "packageId": "Amazon.CDK.CXAPI",
                          "signAssembly": true
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk-cx-api",
                            "groupId": "software.amazon.awscdk"
                          },
                          "package": "software.amazon.awscdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        },
                        "python": {
                          "distName": "aws-cdk.cx-api",
                          "module": "aws_cdk.cx_api"
                        }
                      },
                      "version": "0.28.0"
                    }
                  },
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK",
                      "packageId": "Amazon.CDK",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    },
                    "python": {
                      "distName": "aws-cdk.cdk",
                      "module": "aws_cdk.cdk"
                    }
                  },
                  "version": "0.28.0"
                },
                "@aws-cdk/region-info": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.RegionInfo",
                      "packageId": "Amazon.CDK.RegionInfo",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-region-info",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.regioninfo"
                    },
                    "js": {
                      "npm": "@aws-cdk/region-info"
                    },
                    "python": {
                      "distName": "aws-cdk.region-info",
                      "module": "aws_cdk.region_info"
                    }
                  },
                  "version": "0.28.0"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.AWS.IAM",
                  "packageId": "Amazon.CDK.AWS.IAM",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "iam",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.services.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                },
                "python": {
                  "distName": "aws-cdk.aws-iam",
                  "module": "aws_cdk.aws_iam"
                }
              },
              "version": "0.28.0"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    },
                    "python": {
                      "distName": "aws-cdk.cx-api",
                      "module": "aws_cdk.cx_api"
                    }
                  },
                  "version": "0.28.0"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                },
                "python": {
                  "distName": "aws-cdk.cdk",
                  "module": "aws_cdk.cdk"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.CloudWatch",
              "packageId": "Amazon.CDK.AWS.CloudWatch",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cloudwatch",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "js": {
              "npm": "@aws-cdk/aws-cloudwatch"
            },
            "python": {
              "distName": "aws-cdk.aws-cloudwatch",
              "module": "aws_cdk.aws_cloudwatch"
            }
          },
          "version": "0.28.0"
        },
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    },
                    "python": {
                      "distName": "aws-cdk.cx-api",
                      "module": "aws_cdk.cx_api"
                    }
                  },
                  "version": "0.28.0"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                },
                "python": {
                  "distName": "aws-cdk.cdk",
                  "module": "aws_cdk.cdk"
                }
              },
              "version": "0.28.0"
            },
            "@aws-cdk/region-info": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.RegionInfo",
                  "packageId": "Amazon.CDK.RegionInfo",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-region-info",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.regioninfo"
                },
                "js": {
                  "npm": "@aws-cdk/region-info"
                },
                "python": {
                  "distName": "aws-cdk.region-info",
                  "module": "aws_cdk.region_info"
                }
              },
              "version": "0.28.0"
            }
          },
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.IAM",
              "packageId": "Amazon.CDK.AWS.IAM",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "iam",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            },
            "python": {
              "distName": "aws-cdk.aws-iam",
              "module": "aws_cdk.aws_iam"
            }
          },
          "version": "0.28.0"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                },
                "python": {
                  "distName": "aws-cdk.cx-api",
                  "module": "aws_cdk.cx_api"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            },
            "python": {
              "distName": "aws-cdk.cdk",
              "module": "aws_cdk.cdk"
            }
          },
          "version": "0.28.0"
        },
        "@aws-cdk/cx-api": {
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.CXAPI",
              "packageId": "Amazon.CDK.CXAPI",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk-cx-api",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            },
            "python": {
              "distName": "aws-cdk.cx-api",
              "module": "aws_cdk.cx_api"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      },
      "version": "0.28.0"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.CXAPI",
              "packageId": "Amazon.CDK.CXAPI",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk-cx-api",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            },
            "python": {
              "distName": "aws-cdk.cx-api",
              "module": "aws_cdk.cx_api"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.28.0"
    }
  },
  "description": "CDK Constructs for AWS ElasticLoadBalancing",
  "homepage": "https://github.com/awslabs/aws-cdk",
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-elasticloadbalancing",
  "readme": {
    "markdown": "## AWS Elastic Load Balancing Construct Library\n\nThe `@aws-cdk/aws-ec2` package provides constructs for configuring\nclassic load balancers.\n\n### Configuring a Load Balancer\n\nLoad balancers send traffic to one or more AutoScalingGroups. Create a load\nbalancer, set up listeners and a health check, and supply the fleet(s) you want\nto load balance to in the `targets` property.\n\n```ts\nconst lb = new elb.LoadBalancer(this, 'LB', {\n    vpc,\n    internetFacing: true,\n    healthCheck: {\n        port: 80\n    },\n});\n\nlb.addTarget(myAutoScalingGroup);\nlb.addListener({\n    externalPort: 80,\n});\n```\n\nThe load balancer allows all connections by default. If you want to change that,\npass the `allowConnectionsFrom` property while setting up the listener:\n\n```\nlb.addListener({\n    externalPort: 80,\n    allowConnectionsFrom: [mySecurityGroup]\n});\n```\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
      "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "elasticloadbalancing",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.elasticloadbalancing"
    },
    "js": {
      "npm": "@aws-cdk/aws-elasticloadbalancing"
    },
    "python": {
      "distName": "aws-cdk.aws-elasticloadbalancing",
      "module": "aws_cdk.aws_elasticloadbalancing"
    }
  },
  "types": {
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "base": {
        "fqn": "@aws-cdk/cdk.CfnResource"
      },
      "docs": {
        "cloudformationResource": "AWS::ElasticLoadBalancing::LoadBalancer",
        "comment": "A CloudFormation `AWS::ElasticLoadBalancing::LoadBalancer`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer",
      "initializer": {
        "docs": {
          "comment": "Create a new `AWS::ElasticLoadBalancing::LoadBalancer`."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "- scope in which this resource is defined"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "- scoped id of the resource"
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "- resource properties"
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancerProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "overrides": {
            "fqn": "@aws-cdk/cdk.CfnResource"
          },
          "parameters": [
            {
              "name": "properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CfnLoadBalancer",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "CanonicalHostedZoneName"
          },
          "immutable": true,
          "name": "loadBalancerCanonicalHostedZoneName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "CanonicalHostedZoneNameID"
          },
          "immutable": true,
          "name": "loadBalancerCanonicalHostedZoneNameId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "DNSName"
          },
          "immutable": true,
          "name": "loadBalancerDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "SourceSecurityGroup.GroupName"
          },
          "immutable": true,
          "name": "loadBalancerSourceSecurityGroupGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "SourceSecurityGroup.OwnerAlias"
          },
          "immutable": true,
          "name": "loadBalancerSourceSecurityGroupOwnerAlias",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "propertyOverrides",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancerProps"
          }
        },
        {
          "docs": {
            "comment": "The `TagManager` handles setting, removing and formatting tags\n\nTags should be managed either passing them as properties during\ninitiation or by calling methods on this object. If both techniques are\nused only the tags from the TagManager will be used. `Tag` (aspect)\nwill use the manager."
          },
          "immutable": true,
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.AccessLoggingPolicyProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.AccessLoggingPolicyProperty",
      "kind": "interface",
      "name": "AccessLoggingPolicyProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.AccessLoggingPolicyProperty.Enabled`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html#cfn-elb-accessloggingpolicy-enabled"
          },
          "immutable": true,
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.AccessLoggingPolicyProperty.S3BucketName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html#cfn-elb-accessloggingpolicy-s3bucketname"
          },
          "immutable": true,
          "name": "s3BucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.AccessLoggingPolicyProperty.EmitInterval`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html#cfn-elb-accessloggingpolicy-emitinterval"
          },
          "immutable": true,
          "name": "emitInterval",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.AccessLoggingPolicyProperty.S3BucketPrefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html#cfn-elb-accessloggingpolicy-s3bucketprefix"
          },
          "immutable": true,
          "name": "s3BucketPrefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.AppCookieStickinessPolicyProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.AppCookieStickinessPolicyProperty",
      "kind": "interface",
      "name": "AppCookieStickinessPolicyProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.AppCookieStickinessPolicyProperty.CookieName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html#cfn-elb-appcookiestickinesspolicy-cookiename"
          },
          "immutable": true,
          "name": "cookieName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.AppCookieStickinessPolicyProperty.PolicyName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html#cfn-elb-appcookiestickinesspolicy-policyname"
          },
          "immutable": true,
          "name": "policyName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ConnectionDrainingPolicyProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ConnectionDrainingPolicyProperty",
      "kind": "interface",
      "name": "ConnectionDrainingPolicyProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ConnectionDrainingPolicyProperty.Enabled`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html#cfn-elb-connectiondrainingpolicy-enabled"
          },
          "immutable": true,
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ConnectionDrainingPolicyProperty.Timeout`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html#cfn-elb-connectiondrainingpolicy-timeout"
          },
          "immutable": true,
          "name": "timeout",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ConnectionSettingsProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectionsettings.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ConnectionSettingsProperty",
      "kind": "interface",
      "name": "ConnectionSettingsProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ConnectionSettingsProperty.IdleTimeout`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectionsettings.html#cfn-elb-connectionsettings-idletimeout"
          },
          "immutable": true,
          "name": "idleTimeout",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.HealthCheckProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.HealthCheckProperty",
      "kind": "interface",
      "name": "HealthCheckProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.HealthCheckProperty.HealthyThreshold`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html#cfn-elb-healthcheck-healthythreshold"
          },
          "immutable": true,
          "name": "healthyThreshold",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.HealthCheckProperty.Interval`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html#cfn-elb-healthcheck-interval"
          },
          "immutable": true,
          "name": "interval",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.HealthCheckProperty.Target`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html#cfn-elb-healthcheck-target"
          },
          "immutable": true,
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.HealthCheckProperty.Timeout`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html#cfn-elb-healthcheck-timeout"
          },
          "immutable": true,
          "name": "timeout",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.HealthCheckProperty.UnhealthyThreshold`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html#cfn-elb-healthcheck-unhealthythreshold"
          },
          "immutable": true,
          "name": "unhealthyThreshold",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.LBCookieStickinessPolicyProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.LBCookieStickinessPolicyProperty",
      "kind": "interface",
      "name": "LBCookieStickinessPolicyProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.LBCookieStickinessPolicyProperty.CookieExpirationPeriod`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html#cfn-elb-lbcookiestickinesspolicy-cookieexpirationperiod"
          },
          "immutable": true,
          "name": "cookieExpirationPeriod",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.LBCookieStickinessPolicyProperty.PolicyName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html#cfn-elb-lbcookiestickinesspolicy-policyname"
          },
          "immutable": true,
          "name": "policyName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ListenersProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ListenersProperty",
      "kind": "interface",
      "name": "ListenersProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ListenersProperty.InstancePort`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html#cfn-ec2-elb-listener-instanceport"
          },
          "immutable": true,
          "name": "instancePort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ListenersProperty.LoadBalancerPort`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html#cfn-ec2-elb-listener-loadbalancerport"
          },
          "immutable": true,
          "name": "loadBalancerPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ListenersProperty.Protocol`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html#cfn-ec2-elb-listener-protocol"
          },
          "immutable": true,
          "name": "protocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ListenersProperty.InstanceProtocol`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html#cfn-ec2-elb-listener-instanceprotocol"
          },
          "immutable": true,
          "name": "instanceProtocol",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ListenersProperty.PolicyNames`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html#cfn-ec2-elb-listener-policynames"
          },
          "immutable": true,
          "name": "policyNames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.ListenersProperty.SSLCertificateId`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html#cfn-ec2-elb-listener-sslcertificateid"
          },
          "immutable": true,
          "name": "sslCertificateId",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.PoliciesProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.PoliciesProperty",
      "kind": "interface",
      "name": "PoliciesProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.PoliciesProperty.Attributes`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html#cfn-ec2-elb-policy-attributes"
          },
          "immutable": true,
          "name": "attributes",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "json"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.PoliciesProperty.PolicyName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html#cfn-ec2-elb-policy-policyname"
          },
          "immutable": true,
          "name": "policyName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.PoliciesProperty.PolicyType`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html#cfn-ec2-elb-policy-policytype"
          },
          "immutable": true,
          "name": "policyType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.PoliciesProperty.InstancePorts`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html#cfn-ec2-elb-policy-instanceports"
          },
          "immutable": true,
          "name": "instancePorts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnLoadBalancer.PoliciesProperty.LoadBalancerPorts`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html#cfn-ec2-elb-policy-loadbalancerports"
          },
          "immutable": true,
          "name": "loadBalancerPorts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "comment": "Properties for defining a `AWS::ElasticLoadBalancing::LoadBalancer`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancerProps",
      "kind": "interface",
      "name": "CfnLoadBalancerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.Listeners`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-listeners"
          },
          "immutable": true,
          "name": "listeners",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ListenersProperty"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.AccessLoggingPolicy`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-accessloggingpolicy"
          },
          "immutable": true,
          "name": "accessLoggingPolicy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.AccessLoggingPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.AppCookieStickinessPolicy`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-appcookiestickinesspolicy"
          },
          "immutable": true,
          "name": "appCookieStickinessPolicy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.AppCookieStickinessPolicyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.AvailabilityZones`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-availabilityzones"
          },
          "immutable": true,
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.ConnectionDrainingPolicy`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectiondrainingpolicy"
          },
          "immutable": true,
          "name": "connectionDrainingPolicy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ConnectionDrainingPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.ConnectionSettings`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectionsettings"
          },
          "immutable": true,
          "name": "connectionSettings",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.ConnectionSettingsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.CrossZone`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-crosszone"
          },
          "immutable": true,
          "name": "crossZone",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.HealthCheck`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-healthcheck"
          },
          "immutable": true,
          "name": "healthCheck",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.HealthCheckProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.Instances`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-instances"
          },
          "immutable": true,
          "name": "instances",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.LBCookieStickinessPolicy`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-lbcookiestickinesspolicy"
          },
          "immutable": true,
          "name": "lbCookieStickinessPolicy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.LBCookieStickinessPolicyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.LoadBalancerName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-elbname"
          },
          "immutable": true,
          "name": "loadBalancerName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.Policies`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-policies"
          },
          "immutable": true,
          "name": "policies",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancing.CfnLoadBalancer.PoliciesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.Scheme`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-scheme"
          },
          "immutable": true,
          "name": "scheme",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.SecurityGroups`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-securitygroups"
          },
          "immutable": true,
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.Subnets`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-subnets"
          },
          "immutable": true,
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::ElasticLoadBalancing::LoadBalancer.Tags`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-elasticloadbalancing-loadbalancer-tags"
          },
          "immutable": true,
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.HealthCheck": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "comment": "Describe the health check to a load balancer"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.HealthCheck",
      "kind": "interface",
      "name": "HealthCheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "What port number to health check on"
          },
          "immutable": true,
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "After how many successful checks is an instance considered healthy",
            "default": "2"
          },
          "immutable": true,
          "name": "healthyThreshold",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Number of seconds between health checks",
            "default": "30"
          },
          "immutable": true,
          "name": "interval",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "What path to use for HTTP or HTTPS health check (must return 200)\n\nFor SSL and TCP health checks, accepting connections is enough to be considered\nhealthy.",
            "default": "\"/\""
          },
          "immutable": true,
          "name": "path",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "What protocol to use for health checking\n\nThe protocol is automatically determined from the port if it's not supplied.",
            "default": "Automatic"
          },
          "immutable": true,
          "name": "protocol",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancingProtocol",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Health check timeout",
            "default": "5"
          },
          "immutable": true,
          "name": "timeout",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "After how many unsuccessful checks is an instance considered unhealthy",
            "default": "5"
          },
          "immutable": true,
          "name": "unhealthyThreshold",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "docs": {
        "comment": "Interface that is going to be implemented by constructs that you can load balance to"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Attach load-balanced target to a classic ELB"
          },
          "name": "attachToClassicLB",
          "parameters": [
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancer"
              }
            }
          ]
        }
      ],
      "name": "ILoadBalancerTarget"
    },
    "@aws-cdk/aws-elasticloadbalancing.ListenerPort": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "docs": {
        "comment": "Reference to a listener's port just created.\n\nThis implements IConnectable with a default port (the port that an ELB\nlistener was just created on) for a given security group so that it can be\nconveniently used just like any Connectable. E.g:\n\n    const listener = elb.addListener(...);\n\n    listener.connections.allowDefaultPortFromAnyIPv4();\n    // or\n    instance.connections.allowToDefaultPort(listener);"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.ListenerPort",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "securityGroup",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          {
            "name": "defaultPortRange",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPortRange"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "class",
      "name": "ListenerPort",
      "properties": [
        {
          "immutable": true,
          "name": "connections",
          "overrides": {
            "fqn": "@aws-cdk/aws-ec2.IConnectable"
          },
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancer": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A load balancer with a single listener\n\nRoutes to a fleet of of instances in a VPC."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancer",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerProps"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        },
        {
          "fqn": "@aws-cdk/aws-codedeploy-api.ILoadBalancer"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Add a backend to the load balancer",
            "return": "A ListenerPort object that controls connections to the listener port"
          },
          "name": "addListener",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerListener"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.ListenerPort"
          }
        },
        {
          "name": "addTarget",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Specify the CodeDeploy-required properties of this load balancer."
          },
          "name": "asCodeDeployLoadBalancer",
          "overrides": {
            "fqn": "@aws-cdk/aws-codedeploy-api.ILoadBalancer"
          },
          "returns": {
            "fqn": "@aws-cdk/aws-codedeploy-api.ILoadBalancerProps"
          }
        }
      ],
      "name": "LoadBalancer",
      "properties": [
        {
          "docs": {
            "comment": "Control all connections from and to this load balancer"
          },
          "immutable": true,
          "name": "connections",
          "overrides": {
            "fqn": "@aws-cdk/aws-ec2.IConnectable"
          },
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "comment": "An object controlling specifically the connections for each listener added to this load balancer"
          },
          "immutable": true,
          "name": "listenerPorts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.ListenerPort"
              },
              "kind": "array"
            }
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerCanonicalHostedZoneName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerSourceSecurityGroupGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerSourceSecurityGroupOwnerAlias",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancerListener": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "comment": "Add a backend to the load balancer"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerListener",
      "kind": "interface",
      "name": "LoadBalancerListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "External listening port"
          },
          "immutable": true,
          "name": "externalPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Allow connections to the load balancer from the given set of connection peers\n\nBy default, connections will be allowed from anywhere. Set this to an empty list\nto deny connections, or supply a custom list of peers to allow connections from\n(IP ranges or security groups).",
            "default": "Anywhere"
          },
          "immutable": true,
          "name": "allowConnectionsFrom",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "What public protocol to use for load balancing\n\nEither 'tcp', 'ssl', 'http' or 'https'.\n\nMay be omitted if the external port is either 80 or 443."
          },
          "immutable": true,
          "name": "externalProtocol",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancingProtocol",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Instance listening port\n\nSame as the externalPort if not specified.",
            "default": "externalPort"
          },
          "immutable": true,
          "name": "internalPort",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "What public protocol to use for load balancing\n\nEither 'tcp', 'ssl', 'http' or 'https'.\n\nMay be omitted if the internal port is either 80 or 443.\n\nThe instance protocol is 'tcp' if the front-end protocol\nis 'tcp' or 'ssl', the instance protocol is 'http' if the\nfront-end protocol is 'https'."
          },
          "immutable": true,
          "name": "internalProtocol",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancingProtocol",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "SSL policy names"
          },
          "immutable": true,
          "name": "policyNames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "ID of SSL certificate"
          },
          "immutable": true,
          "name": "sslCertificateId",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "datatype": true,
      "docs": {
        "comment": "Construction properties for a LoadBalancer"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerProps",
      "kind": "interface",
      "name": "LoadBalancerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "VPC network of the fleet instances"
          },
          "immutable": true,
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpcNetwork"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Health check settings for the load balancing targets.\n\nNot required but recommended."
          },
          "immutable": true,
          "name": "healthCheck",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.HealthCheck",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether this is an internet-facing Load Balancer\n\nThis controls whether the LB has a public IP address assigned. It does\nnot open up the Load Balancer's security groups to public internet access.",
            "default": "false"
          },
          "immutable": true,
          "name": "internetFacing",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "What listeners to set up for the load balancer.\n\nCan also be added by .addListener()"
          },
          "immutable": true,
          "name": "listeners",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerListener"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "What targets to load balance to.\n\nCan also be added by .addTarget()"
          },
          "immutable": true,
          "name": "targets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancingProtocol": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancingProtocol",
      "kind": "enum",
      "members": [
        {
          "name": "Tcp"
        },
        {
          "name": "Ssl"
        },
        {
          "name": "Http"
        },
        {
          "name": "Https"
        }
      ],
      "name": "LoadBalancingProtocol"
    }
  },
  "version": "0.28.0",
  "fingerprint": "XRxfIxhT9v3PkIScIKEiug9+tFYRBlNCysuoKOOpawM="
}
