import events = require('@aws-cdk/aws-events');
import iam = require('@aws-cdk/aws-iam');
import cdk = require('@aws-cdk/cdk');
import { TaskDefinition } from '../base/task-definition';
import { ICluster } from '../cluster';
/**
 * Properties to define an EC2 Event Task
 */
export interface Ec2EventRuleTargetProps {
    /**
     * Cluster where service will be deployed
     */
    readonly cluster: ICluster;
    /**
     * Task Definition of the task that should be started
     */
    readonly taskDefinition: TaskDefinition;
    /**
     * How many tasks should be started when this event is triggered
     *
     * @default 1
     */
    readonly taskCount?: number;
}
/**
 * Start a service on an EC2 cluster
 */
export declare class Ec2EventRuleTarget extends cdk.Construct implements events.IEventRuleTarget {
    private readonly cluster;
    private readonly taskDefinition;
    private readonly taskCount;
    constructor(scope: cdk.Construct, id: string, props: Ec2EventRuleTargetProps);
    /**
     * Allows using containers as target of CloudWatch events
     */
    asEventRuleTarget(_ruleArn: string, _ruleUniqueId: string): events.EventRuleTargetProps;
    /**
     * Create or get the IAM Role used to start this Task Definition.
     *
     * We create it under the TaskDefinition object so that if we have multiple EventTargets
     * they can reuse the same role.
     */
    readonly eventsRole: iam.IRole;
    /**
     * Prepare the Event Rule Target
     */
    protected prepare(): void;
}
